// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PGERP.RftSQL;

#nullable disable

namespace PGERP.Migrations
{
    [DbContext(typeof(RftContextModel))]
    [Migration("20220613133953_RftTabelaLocatii")]
    partial class RftTabelaLocatii
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("PGERP.RftModele.RftModelAutentificari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DNS")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAutentificare")
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Stare")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Utilizator")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelAutentificariSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelBuget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cumparaturi")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CumparaturiAlimente")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CumparaturiElectronice")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CumparaturiImbracaminte")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Divertisment")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DivertismentFilme")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DivertismentJocuri")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DivertismentMuzica")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Educatie")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EducatieCartiElectronice")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EducatieEvenimente")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EducatieInvatamant")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Facturi")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FacturiApa")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FacturiCurent")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FacturiTelefonie")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Nealocat")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sanatate")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SanatateActivitatiSportive")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SanatateMedical")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Transport")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TransportComun")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TransportPersonal")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelBugetSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelCumparaturiAlimente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<int>("GramajTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelCumparaturiAlimenteSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelCumparaturiElectronice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatorare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelCumparaturiElectroniceSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelCumparaturiImbracaminte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelCumparaturiImbracaminteSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelDivertismentFilme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelDivertismentFilmeSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelDivertismentJocuri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelDivertismentJocuriSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelDivertismentMuzica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelDivertismentMuzicaSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelEducatieCartiElectronice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelEducatieCartiElectroniceset");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelEducatieEvenimente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelEducatieEvenimenteSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelEducatieInvatamant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireInstitutie")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelEducatieInvatamantSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelFacturiApa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("CantitateMetriiCubi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelFacturiApaSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelFacturiCurent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("CantitateKW")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelFacturiCurentSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelFacturiTelefonie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelFacturiTelefonieSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelLocatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DenumireLocatie")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitudine")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitudine")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("RftModelLocatiiSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelSanatateActivitatiSportive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelSanatateActivitatiSportiveSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelSanatateMedical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdresaPaginaInternet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cantitate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DenumireMagazin")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelSanatateMedicalSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelTemaCulori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CuloriDeschise")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CuloriInchise")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RftModelTemaCuloriSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelTransportComun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destinatie")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistantaKm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieInitiala")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelTransportComunSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelTransportPersonal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantitateLitri")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistantaKm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirmaProducatoare")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstitutiaFinanciara")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocatieDocumente")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodaPlata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notite")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tranzactie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelTransportPersonalSet");
                });

            modelBuilder.Entity("PGERP.RftModele.RftModelUtilizatori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInregistrare")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parola")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenume")
                        .HasColumnType("TEXT");

                    b.Property<string>("Utilizator")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RftModelUtilizatoriSet");
                });
#pragma warning restore 612, 618
        }
    }
}
